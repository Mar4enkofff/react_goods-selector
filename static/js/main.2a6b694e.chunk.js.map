{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleAddButton","good","setState","handleClearButton","this","goodSelected","length","className","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,kBAAoB,WAClB,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aACFM,EAAeN,EAAaO,OAAS,EAE3C,OACE,uBAAMC,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGF,EAAY,UAAMN,EAAN,gBAAmC,oBAC/CM,GACC,wBACE,UAAQ,cACRG,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKN,0BAM1B,uBAAOI,UAAU,QAAjB,SACE,gCACGX,EAAMc,KAAI,SAACT,GAAD,OACT,qBACE,UAAQ,OAERM,UAAWI,IAAW,GAAI,CACxB,+BAAgCV,IAASF,IAJ7C,UAOE,6BACGE,IAASF,EACR,wBACE,UAAQ,eACRS,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAM,EAAKN,qBAJtB,eASA,wBACE,UAAQ,YACRK,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKT,gBAAgBC,IAJtC,iBAUJ,oBAAI,UAAQ,YAAYM,UAAU,eAAlC,SACGN,MA3BEA,iBArCrB,GAAyBW,aClBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2a6b694e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goods: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleAddButton = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  handleClearButton = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const goodSelected = selectedGood.length > 0;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {goodSelected ? `${selectedGood} is selected` : 'No goods selected'}\n          {goodSelected && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={() => this.handleClearButton()}\n            >\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            </button>\n          )}\n        </h1>\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames('', {\n                  'has-background-success-light': good === selectedGood,\n                })}\n              >\n                <td>\n                  {good === selectedGood ? (\n                    <button\n                      data-cy=\"RemoveButton\"\n                      type=\"button\"\n                      className=\"button is-info\"\n                      onClick={() => this.handleClearButton()}\n                    >\n                      -\n                    </button>\n                  ) : (\n                    <button\n                      data-cy=\"AddButton\"\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => this.handleAddButton(good)}\n                    >\n                      +\n                    </button>\n                  )}\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}